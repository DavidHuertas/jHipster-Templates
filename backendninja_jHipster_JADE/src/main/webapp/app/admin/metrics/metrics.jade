div
  h2(data-translate='metrics.title') Application Metrics
  p
    button.btn.btn-primary(type='button', ng-click='vm.refresh()')
      span.glyphicon.glyphicon-refresh
      span(data-translate='metrics.refresh.button') Refresh
  h3(data-translate='metrics.jvm.title') JVM Metrics
  .row(ng-hide='vm.updatingMetrics')
    .col-md-4
      b(data-translate='metrics.jvm.memory.title') Memory
      p
        span(data-translate='metrics.jvm.memory.total') Total Memory
        |  ({{vm.metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:0}}M / {{vm.metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:0}}M)
      uib-progressbar.progress-striped.active(min='0', max="vm.metrics.gauges['jvm.memory.total.max'].value", value="vm.metrics.gauges['jvm.memory.total.used'].value", type='success')
        span
          | {{vm.metrics.gauges['jvm.memory.total.used'].value * 100 / vm.metrics.gauges['jvm.memory.total.max'].value  | number:0}}%
      p
        span(data-translate='metrics.jvm.memory.heap') Heap Memory
        |  ({{vm.metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:0}}M / {{vm.metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:0}}M)
      uib-progressbar.progress-striped.active(min='0', max="vm.metrics.gauges['jvm.memory.heap.max'].value", value="vm.metrics.gauges['jvm.memory.heap.used'].value", type='success')
        span
          | {{vm.metrics.gauges['jvm.memory.heap.used'].value * 100 / vm.metrics.gauges['jvm.memory.heap.max'].value  | number:0}}%
      p
        span(data-translate='metrics.jvm.memory.nonheap') Non-Heap Memory
        |  ({{vm.metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:0}}M / {{vm.metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:0}}M)
      uib-progressbar.progress-striped.active(min='0', max="vm.metrics.gauges['jvm.memory.non-heap.committed'].value", value="vm.metrics.gauges['jvm.memory.non-heap.used'].value", type='success')
        span
          | {{vm.metrics.gauges['jvm.memory.non-heap.used'].value * 100 / vm.metrics.gauges['jvm.memory.non-heap.committed'].value  | number:0}}%
    .col-md-4
      b(data-translate='metrics.jvm.threads.title') Threads
      |  (Total: {{vm.metrics.gauges['jvm.threads.count'].value}}) 
      a.hand(ng-click='vm.refreshThreadDumpData()', data-toggle='modal', data-target='#threadDump')
        i.glyphicon.glyphicon-eye-open
      p
        span(data-translate='metrics.jvm.threads.runnable') Runnable
        |  {{vm.metrics.gauges['jvm.threads.runnable.count'].value}}
      uib-progressbar.progress-striped.active(min='0', value="vm.metrics.gauges['jvm.threads.runnable.count'].value", max="vm.metrics.gauges['jvm.threads.count'].value", type='success')
        span
          | {{vm.metrics.gauges['jvm.threads.runnable.count'].value * 100 / vm.metrics.gauges['jvm.threads.count'].value  | number:0}}%
      p
        span(data-translate='metrics.jvm.threads.timedwaiting') Timed Waiting
        |  ({{vm.metrics.gauges['jvm.threads.timed_waiting.count'].value}})
      uib-progressbar.progress-striped.active(min='0', value="vm.metrics.gauges['jvm.threads.timed_waiting.count'].value", max="vm.metrics.gauges['jvm.threads.count'].value", type='warning')
        span
          | {{vm.metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / vm.metrics.gauges['jvm.threads.count'].value  | number:0}}%
      p
        span(data-translate='metrics.jvm.threads.waiting') Waiting
        |  ({{vm.metrics.gauges['jvm.threads.waiting.count'].value}})
      uib-progressbar.progress-striped.active(min='0', value="vm.metrics.gauges['jvm.threads.waiting.count'].value", max="vm.metrics.gauges['jvm.threads.count'].value", type='warning')
        span
          | {{vm.metrics.gauges['jvm.threads.waiting.count'].value * 100 / vm.metrics.gauges['jvm.threads.count'].value  | number:0}}%
      p
        span(data-translate='metrics.jvm.threads.blocked') Blocked
        |  ({{vm.metrics.gauges['jvm.threads.blocked.count'].value}})
      uib-progressbar.progress-striped.active(min='0', value="vm.metrics.gauges['jvm.threads.blocked.count'].value", max="vm.metrics.gauges['jvm.threads.count'].value", type='success')
        span
          | {{vm.metrics.gauges['jvm.threads.blocked.count'].value * 100 / vm.metrics.gauges['jvm.threads.count'].value  | number:0}}%
    .col-md-4
      b(data-translate='metrics.jvm.gc.title') Garbage collections
      .row
        .col-md-9(data-translate='metrics.jvm.gc.marksweepcount') Mark Sweep count
        .col-md-3.text-right {{vm.metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}
      .row
        .col-md-9(data-translate='metrics.jvm.gc.marksweeptime') Mark Sweep time
        .col-md-3.text-right {{vm.metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms
      .row
        .col-md-9(data-translate='metrics.jvm.gc.scavengecount') Scavenge count
        .col-md-3.text-right {{vm.metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}
      .row
        .col-md-9(data-translate='metrics.jvm.gc.scavengetime') Scavenge time
        .col-md-3.text-right {{vm.metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms
  .well.well-lg(ng-show='vm.updatingMetrics', data-translate='metrics.updating') Updating...
  h3(data-translate='metrics.jvm.http.title') HTTP requests (events per second)
  p
    span(data-translate='metrics.jvm.http.active') Active requests
    b
      | {{vm.metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:0}}
    |  - 
    span(data-translate='metrics.jvm.http.total') Total requests
    b
      | {{vm.metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:0}}
  .table-responsive
    table.table.table-striped
      thead
        tr
          th(data-translate='metrics.jvm.http.table.code') Code
          th(data-translate='metrics.jvm.http.table.count') Count
          th.text-right(data-translate='metrics.jvm.http.table.mean') Mean
          th.text-right
            span(data-translate='metrics.jvm.http.table.average') Average
            |  (1 min)
          th.text-right
            span(data-translate='metrics.jvm.http.table.average') Average
            |  (5 min)
          th.text-right
            span(data-translate='metrics.jvm.http.table.average') Average
            |  (15 min)
      tbody
        tr
          td(data-translate='metrics.jvm.http.code.ok') OK
          td
            uib-progressbar.progress-striped.active(min='0', max="vm.metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count", value="vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count", type='success')
              span
                | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate | number:2}}
        tr
          td(data-translate='metrics.jvm.http.code.notfound') Not Found
          td
            uib-progressbar.progress-striped.active(min='0', max="vm.metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count", value="vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count", type='success')
              span
                | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate | number:2}}
        tr
          td(data-translate='metrics.jvm.http.code.servererror') Server error
          td
            uib-progressbar.progress-striped.active(min='0', max="vm.metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count", value="vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count", type='success')
              span
                | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate | number:2}}
          td.text-right
            | {{vm.metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate | number:2}}
  h3(data-translate='metrics.servicesstats.title') Services statistics (time in millisecond)
  .table-responsive
    table.table.table-striped
      thead
        tr
          th(data-translate='metrics.servicesstats.table.name') Service name
          th.text-right(data-translate='metrics.servicesstats.table.count') Count
          th.text-right(data-translate='metrics.servicesstats.table.mean') Mean
          th.text-right(data-translate='metrics.servicesstats.table.min') Min
          th.text-right(data-translate='metrics.servicesstats.table.p50') p50
          th.text-right(data-translate='metrics.servicesstats.table.p75') p75
          th.text-right(data-translate='metrics.servicesstats.table.p95') p95
          th.text-right(data-translate='metrics.servicesstats.table.p99') p99
          th.text-right(data-translate='metrics.servicesstats.table.max') Max
      tbody
        tr(ng-repeat='(k, v) in vm.servicesStats')
          td {{k}}
          td.text-right {{v.count}}
          td.text-right {{v.mean * 1000 | number:0}}
          td.text-right {{v.min * 1000 | number:0}}
          td.text-right {{v.p50 * 1000 | number:0}}
          td.text-right {{v.p75 * 1000 | number:0}}
          td.text-right {{v.p95 * 1000 | number:0}}
          td.text-right {{v.p99 * 1000 | number:0}}
          td.text-right {{v.max * 1000 | number:0}}
  h3(data-translate='metrics.cache.title') Cache statistics
  .table-responsive
    table.table.table-striped
      thead
        tr
          th(data-translate='metrics.cache.cachename') Cache name
          th.text-right(data-translate='metrics.cache.hits') Cache Hits
          th.text-right(data-translate='metrics.cache.misses') Cache Misses
          th.text-right(data-translate='metrics.cache.gets') Cache Gets
          th.text-right(data-translate='metrics.cache.puts') Cache Puts
          th.text-right(data-translate='metrics.cache.removals') Cache Removals
          th.text-right(data-translate='metrics.cache.evictions') Cache Evictions
          th.text-right(data-translate='metrics.cache.hitPercent') Cache Hit %
          th.text-right(data-translate='metrics.cache.missPercent') Cache Miss %
          th.text-right(data-translate='metrics.cache.averageGetTime') Average get time (µs)
          th.text-right(data-translate='metrics.cache.averagePutTime') Average put time (µs)
          th.text-right(data-translate='metrics.cache.averageRemoveTime') Average remove time (µs)
      tbody
        tr(ng-repeat='(k, v) in vm.cachesStats', ng-once='')
          td {{v.name}}
          td.text-right {{vm.metrics.gauges[k + '.cache-hits'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-misses'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-gets'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-puts'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-removals'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-evictions'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-hit-percentage'].value}}
          td.text-right {{vm.metrics.gauges[k + '.cache-miss-percentage'].value}}
          td.text-right {{vm.metrics.gauges[k + '.average-get-time'].value | number:2}}
          td.text-right {{vm.metrics.gauges[k + '.average-put-time'].value | number:2}}
          td.text-right {{vm.metrics.gauges[k + '.average-remove-time'].value | number:2}}
  h3(data-translate='metrics.datasource.title', ng-show="vm.metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0") DataSource statistics (time in millisecond)
  .table-responsive(ng-show="vm.metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0")
    table.table.table-striped
      thead
        tr
          th
            span(data-translate='metrics.datasource.usage') Usage
            |  ({{vm.metrics.gauges['HikariPool-1.pool.ActiveConnections'].value}} / {{vm.metrics.gauges['HikariPool-1.pool.TotalConnections'].value}})
          th.text-right(data-translate='metrics.datasource.count') Count
          th.text-right(data-translate='metrics.datasource.mean') Mean
          th.text-right(data-translate='metrics.datasource.min') Min
          th.text-right(data-translate='metrics.datasource.p50') p50
          th.text-right(data-translate='metrics.datasource.p75') p75
          th.text-right(data-translate='metrics.datasource.p95') p95
          th.text-right(data-translate='metrics.datasource.p99') p99
          th.text-right(data-translate='metrics.datasource.max') Max
      tbody
        tr
          td
            .progress.progress-striped
              uib-progressbar.progress-striped.active(min='0', max="vm.metrics.gauges['HikariPool-1.pool.TotalConnections'].value", value="vm.metrics.gauges['HikariPool-1.pool.ActiveConnections'].value", type='success')
                span
                  | {{vm.metrics.gauges['HikariPool-1.pool.ActiveConnections'].value * 100 / vm.metrics.gauges['HikariPool-1.pool.TotalConnections'].value  | number:0}}%
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].count}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].mean | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].min | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].p50 | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].p75 | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].p95 | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].p99 | number:2}}
          td.text-right {{vm.metrics.histograms['HikariPool-1.pool.Usage'].max | number:2}}
